
# === general config ===

set $mod Mod4
floating_modifier $mod

font xft: Droid Sans 8

popup_during_fullscreen smart

exec_always --no-startup-id feh --bg-scale ~/.wallpaper.jpg
exec "xset +fp /usr/share/fonts/local/"
#exec_always --no-startup-id xautolock -time 1 -corners "++--" -cornerdelay 5 \
			#-notifier "notify-send -u low -t 4000 'Locking screen...'" -notify 5 \
			#-locker "lock.sh" 

exec_always xautolock -time 1 -corners "+---" -cornerdelay 5 \
			-notifier 'dim_screen.sh' -notify 5 \
			-locker "lock.sh" 
	
#exec_always --no-startup-id xidlehook --not-when-fullscreen --not-when-audio \
			#--timer normal 60 'echo $(xbacklight -get) > /tmp/oldbacklight; xbacklight -set 10' \
			#'xbacklight -set $(cat /tmp/oldbacklight)'\
			#--timer primary 8 '(sleep 0.5; xbacklight -set $(cat /tmp/oldbacklight) ) & lock.sh' ''
# ===

# === launch keybindings ===

bindsym $mod+Return exec st -e zsh
bindsym $mod+Shift+Return exec st -t flying_ranger -e zsh
bindsym $mod+t exec urxvt -e zsh

bindsym $mod+Shift+q kill

bindsym $mod+d exec dmenu_run

bindsym XF86MonBrightnessUp exec xbacklight -inc 10
bindsym XF86MonBrightnessDown exec xbacklight -dec 10
bindsym $mod+x exec --no-startup-id nautilus
bindsym $mod+b exec i3-msg bar mode toggle
bindsym Print exec scrotclip.sh 
bindsym $mod+Shift+c reload
bindsym $mod+Shift+s restart

bindsym $mod+g exec rofi -show run rofi -show run -lines 5 -eh 1 -width 30 -padding 20 -opacity "85" -bw 5 -bc "$bg-color" -bg "$bg-color" -fg "$text-color" -hlbg "$bg-color" -hlfg "#9575cd" -font "PxPlus IBM VGA8 12" -fuzzy -separator-style dash -scrollbar-width 2 -location 0 -columns 3

bindsym $mod+Shift+Z exec pass clip --rofi
bindsym $mod+z exec rofi-pass

bindsym $mod+r exec st -t flying_ranger -e ranger
bindsym $mod+o exec urxvt -name flying_ranger -title flying_ranger -e ranger

bindsym $mod+s exec rofi -show ssh
bindsym $mod+y exec "cmd=$(ls ~/scripts | rofi -dmenu) && st -t floating -e bash -c \\" $cmd ; sh\\""

bindsym XF86LaunchA exec "xautolock -locknow"

# ===

# === movement macros ===

bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

bindsym $mod+c split h
bindsym $mod+v split v

bindsym $mod+f fullscreen toggle

bindsym $mod+Shift+space floating toggle
bindsym $mod+mod1+space focus mode_toggle

mode "resize" {
		bindsym h resize shrink width 5 px or 5 ppt
		bindsym j resize grow height 5 px or 5 ppt
		bindsym k resize shrink height 5 px or 5 ppt
		bindsym l resize grow width 5 px or 5 ppt

		bindsym Return mode "default"
		bindsym Escape mode "default"
}
bindsym $mod+m mode "resize"

# ===

# === workspaces ===

set $workspace1 "1 "
set $workspace2 "2 "
set $workspace3 "3 "
set $workspace4 "4 "
set $workspace5 "5"
set $workspace6 "6"
set $workspace7 "7"
set $workspace8 "8"
set $workspace9 "9 "
set $workspace10 "10 "
#set $workspace11 "A1 ASL"
#set $workspace12 "A2 ASL"
#set $workspace13 "[3] python"
#set $workspace14 "14"
#set $workspace15 "[5] report"
#set $workspace16 "16"
#set $workspace17 "17"
#set $workspace18 "18"
#set $workspace19 "[9] radare"
#set $workspace20 "[0] vbox"

bindsym $mod+Shift+1 move container to workspace $workspace1
bindsym $mod+Shift+2 move container to workspace $workspace2
bindsym $mod+Shift+3 move container to workspace $workspace3
bindsym $mod+Shift+4 move container to workspace $workspace4
bindsym $mod+Shift+5 move container to workspace $workspace5
bindsym $mod+Shift+6 move container to workspace $workspace6
bindsym $mod+Shift+7 move container to workspace $workspace7
bindsym $mod+Shift+8 move container to workspace $workspace8
bindsym $mod+Shift+9 move container to workspace $workspace9
bindsym $mod+Shift+0 move container to workspace $workspace10
#bindsym $mod+Ctrl+1 move container to workspace $workspace11
#bindsym $mod+Ctrl+2 move container to workspace $workspace12
#bindsym $mod+Ctrl+3 move container to workspace $workspace13
#bindsym $mod+Ctrl+4 move container to workspace $workspace14
#bindsym $mod+Ctrl+5 move container to workspace $workspace15
#bindsym $mod+Ctrl+6 move container to workspace $workspace16
#bindsym $mod+Ctrl+7 move container to workspace $workspace17
#bindsym $mod+Ctrl+8 move container to workspace $workspace18
#bindsym $mod+Ctrl+9 move container to workspace $workspace19
#bindsym $mod+Ctrl+0 move container to workspace $workspace20

bindsym $mod+1 workspace $workspace1
bindsym $mod+2 workspace $workspace2
bindsym $mod+3 workspace $workspace3
bindsym $mod+4 workspace $workspace4
bindsym $mod+5 workspace $workspace5
bindsym $mod+6 workspace $workspace6
bindsym $mod+7 workspace $workspace7
bindsym $mod+8 workspace $workspace8
bindsym $mod+9 workspace $workspace9
bindsym $mod+0 workspace $workspace10
#bindsym mod1+1 workspace $workspace11
#bindsym mod1+2 workspace $workspace12
#bindsym mod1+3 workspace $workspace13
#bindsym mod1+4 workspace $workspace14
#bindsym mod1+5 workspace $workspace15
#bindsym mod1+6 workspace $workspace16
#bindsym mod1+7 workspace $workspace17
#bindsym mod1+8 workspace $workspace18
#bindsym mod1+9 workspace $workspace19
#bindsym mod1+0 workspace $workspace20

bindsym $mod+n workspace prev
bindsym $mod+p workspace next

bindsym $mod+Shift+n move container to workspace prev
bindsym $mod+Shift+p move container to workspace next

bindsym $mod+space workspace back_and_forth

# default workspaces - spotify does not work
assign [class="Spotify"] $workspace10
assign [class="Skype"] $workspace9

#===

# === windows style ===

for_window [class="Nautilus" instance="file_progress"] floating enable
for_window [class="Xmessage"] floating enable
for_window [title="Find"] floating enable
for_window [title="yview"] floating enable
for_window [title="flying_ranger"] floating enable; 
for_window [title="floating"] floating enable; 
for_window [title="sxiv"] floating enable;  

client.focused		#ffffff #ffffff #fdf6e3 #6c71c4
client.focused_inactive #073642 #073642 #eee8d5 #6c71c4
client.unfocused	#073642 #073642 #93a1a1 #586e75
client.urgent		#d33682 #d33682 #fdf6e3 #dc322f

new_window 1pixel

new_float normal 0 
hide_edge_borders both

for_window [class="^.*"] border pixel 2

# ===

# === i3 bar ===


# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
	#font xft: Droid Sans 8
	font xft:Px437 ATI 8x8, FontAwesome 10
    #i3blocksbar -non rimuovere questo commento.
status_command i3blocks -c ~/.config/i3/i3blocks.conf
#i3statusbar -non rimuovere questo commento. 
status_command i3status
#status
    colors {
        separator #268bd2
	    background #002b36
	    statusline #839496
	    focused_workspace #fdf6e3 #6c71c4 #fdf6e3
	    active_workspace #fdf6e3 #6c71c4 #fdf6e3
	    inactive_workspace #002b36 #586e75 #002b36
	    urgent_workspace #d33682 #d33682 #fdf6e3
	  }
}

#===

# === i3 gaps ===


#smart_gaps off

gaps inner 20
gaps outer 0

set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: j|k|0 
set $mode_gaps_inner Inner Gaps: j|k|0 
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Escape mode "default"
}

mode "$mode_gaps_inner" {
        bindsym k gaps inner all plus 5
        bindsym j gaps inner all minus 5
        bindsym 0 gaps inner all set 0

        bindsym Escape mode "default"
}

mode "$mode_gaps_outer" {
        bindsym k gaps outer all plus 5
        bindsym j gaps outer all minus 5
        bindsym 0 gaps outer all set 0

        bindsym Escape mode "default"
}

# vim:fdm=expr:fdl=0
# vim:fde=getline(v\:lnum)=~'==*$'?(getline(v\:lnum)=~'==\\+[^=]\\+==.*'?'>'\:'<').(strlen(matchstr(getline(v\:lnum),'==*$'))-2)\:'='
