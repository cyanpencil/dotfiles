Se pacman rompe il cazzo per le chiavi esegui:
    sudo pacman -S archlinux-keyring

Le applicazioni di default stanno in .config/mimeapps.list
Per vedere quale applicazione viene aperta di default: xdg-mime query default image/png

mtr is the new traceroute
iftop to monitor where goes traffic (by IP)
nethogs to montior traffic by process

telnet mapscii.me (Assurdo)
terminal-parrot :)
python .asciimatics/samples/particles.py
ternimal


Triggers:
    Staying up late
    Losing time
    Mindlessly browsing internet
    Not waking up *


udev rules: /etc/udev/rules.d/...

Aggiunti moltissimi nuovi font bitmap. Vedere preferiti di chrome.


Make gif of screencast: peek
Visual xrandr: arandr
Prova eventi input: xev, xbindkeys -k
Condividi file facilmente: transfer
Tool for searching code: ripgrep
Instant answers: howdoi
Package manager: pacli
File manager: pcmanfm, vifm
Video Player:  mpv +
Subtitles downloader: subdl , submarine
Ebook Reader: fbless
Giochi da terminale da provare: crawl, gearhead, slash'em

Programmi inutili da togliere: teamviewer e le lib32 a esso collegate

Siti interessanti: font squirrel

in bash, Ctrl-P                                         cerca e edita file in vim
wget --timeout=1 --random-wait -r -p -e robots=off -U mozilla http://www.example.com -l {depth}    clona un sito
Alt-c nel terminale                                    cd nella cartella individuata da fzf
find -name "*.java" -mtime -2 -exec vim -o '{}' +       apri in splits tutti i file java editati negli ultimi 2 giorni

vim:
    :'<, >'! grep "gh" 
    tutti i remaps: H,J,K,L per movimento
    ,s, ,q, ,Q per salvare
    :browse oldfiles 


toilet -F border -t ciao io sono luca | lolcat -a

## In caso si rompe tutto: 
    1) Downgrade del kernel: 
        cd /var/cache/pacman/pkg
        pacman -U linux-4.xx.xx
    2) Inserisci live cd/chiavetta:
        mount /dev/sdaX /mnt
        mount /dev/sdaY /mnt/boot
        arch-chroot /mnt /bin/bash
        mkinitcpio -p linux


 -- CALENDARIO --

Manca solo l'orale di analisi e quello di combinatoria e ho finito :)


 -- ETH --

L'application online deve essere compilata entro il 31 marzo.
Tutti i documenti cartacei necessari devono arrivare entro il 4 Aprile 2018.
Le lezioni cominciano il 18 settembre 2018!!
I documenti _non_ devono essere tradotti, se sono in italiano, inglese, tedesco o francese (da confermare).
Documenti necessari:
    -Una copia stampata e firmata dell'application form
    -Una copia del diploma di liceo.
    -Transcript degli esami
    -Certificato di iscrizione con durata degli studi 
    -Certificato d'inglese (livello C1)
    -2 lettere di raccomandazione 
    -GRE test score (opzionale)
    -Curriculum vitae
    -Scan del passaporto o della carta d'identità
    -Prova del pagamento avvenuto


 -- GSoC --

12 marzo:  application period start
27 marzo:  application period end
23 aprile: results announced + community bonding start
14 maggio: start coding
11 giugno: first evaluation
9 luglio: second evaluation
6 agosto: end coding
22 agosto: results announced


 -- Laurea --

15 marzo: scadenza prenotazioni per sessione straordinaria
19 marzo: inizio sessione straordinaria
19 aprile: fine sessione straordinaria
4 giugno: inizio sessione estiva
18 giugno: scadenza presentazione domanda di laurea
22 giugno: fine sessione estiva (per laureandi a luglio)
13 luglio: scadenza caricamento tesi su infostud (10 giorni prima sessione di laurea)
23-27 luglio: sessione di laurea





reddit/netsec

w3challs.com
overthewire.org/wargames/vortex
smashthestack.org

it-sec-catalog
shellphish/how2heap


commands:
	readelf
	ent - per guardare entropia (sopra il 7 è packato)
	ldd/objdump -p BIN | grep NEEDED
	strace/ltrace
	file
	strings
	man ascii
	ndisasm
	parallel
	wget curl
	010 editor
	/proc
	readelf
	elfparser-cli
	objcopy

Viper framework

/proc/self/status
"_" envinronment variable

guarda se le sezioni sono eseguibili con elfparser

eh_frame sgama funzioni anche se l'ELF è stato strippato

:%!xxd  e :%!xxd -r



tainted analysis per capire dove sono gli exploit (e.g. se l'instruction pointer è tainted allora posso fare qualcosa)




---- malware analysis 2 ----
i primi passi di un'applicazione sono spesso il parsing degli argomenti di command line
Se si crea un mutex spesso è per garantire che è l'unica istanza in esecuzione del virus.

---- denial of service -----
digitalattackmap.com
HTTP-Unbearable-Load-King (HULK) denial of service
Tor's Hammer
R-U-Dead-Yet (RUDY) denial of service
SYN spoofing attack
Low orbit Ion Cannon
Reflection and amplification attacks
hping3 - network tool able to send custom TCP or IP  packets and to display target replies


---- ROP -------------------
usa pwndbg con "set disable-randomization off" per vedere gli indirizzi randomizzati
execve syscall:
	EAX = 0xb
	EBX = "pointer to /bin/sh"
	ECX = 0
	EDX = 0

usa ROPgadget oppure ropper!
ci sta un opzione che ti fa le ropchain in automatico (--ropchain)

le syscall da usare sono execve oppure su x64 ci sta proprio il comando syscall


IMPORTANTE: in x86, i parametri a funzione vengono mandati sullo stack (esp + 4...), mentre in x64, i parametri a funzione li mando sui registri rdi, rsi, rdx, rcx, r8, r9


----- web security --------------------
cerca errori 404 per trovare info magari sulla versione di apache

---- radare
eco "colortheme"
pwd
src.rainbow
anal.jmptbl
hud V_
bit editor Vd1
flag spaces VF
types Vt
alias $foo=x
macro (foo name, f $0=$$+rax) .(foo test)
script . foo.r2 | foo.py
current offset $$


Le configurazioni di base di X server sono in /etc/X11/xinit/xserverrc
(come arinterval e ardelay per la tastiera)

